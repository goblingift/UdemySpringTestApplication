<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:tx="http://www.springframework.org/schema/tx"
 xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.1.xsd
    http://www.springframework.org/schema/jdbc
    http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd" xmlns:aop="http://www.springframework.org/schema/aop">

    
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.hsqldb.jdbcDriver" />
        <property name="url" value="jdbc:hsqldb:mem://localhost" />
        <property name="username" value="sa" />
        <property name="password" value="" />
    </bean>   
    
    <jdbc:initialize-database data-source="dataSource">
        <jdbc:script location="classpath:dbschema.sql" />
        <jdbc:script location="classpath:test-data.sql" />
    </jdbc:initialize-database>
    
    <bean id="databaseService" class="com.goblingift.orm.DatabaseService">
        <constructor-arg ref="dataSource" />
    </bean>
    
    <bean id="userManager" class="com.goblingift.orm.UserManager">
        <constructor-arg ref="databaseService" />
    </bean>
    
    <bean id="userMapper" class="com.goblingift.orm.UserMapper" />
    
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="packagesToScan" value="com.goblingift.orm.entities" />
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="generateDdl" value="true" />
                <property name="showSql" value="true" />
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>
    
    
    
    <!-- Activate @Transactional annotation -->
    <tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager"/> 
    
    
    <!-- Automatic Transaction Participation -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    
    <!-- To inject EntityManager through EntityManagerFactory -->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
    
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="getAllUsers" read-only="true" timeout="30" />
        </tx:attributes>
    </tx:advice>
    
    <tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager" />
    
    <bean id="userManagerTransactionTemplate" class="com.goblingift.orm.UserManagerTransactionTemplate">
        <constructor-arg ref="transactionManager" />
        <property name="userManager" ref="userManager" />
    </bean>
    
    
</beans>